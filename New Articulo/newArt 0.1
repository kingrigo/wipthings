<template>
    <div id="app">
        <div class="">

                <hr>
                <p>{{clickOrder}}</p>
                <input type="file" @change="showData" class="form-control-file" multiple>
                <button class="btn" @click="ordenar()">Ordenar</button>

                <div class="card-group">
                    <div class="card border-secondary" v-for="(p,index) in photos" @click="changeOrder(index)">
                        <div>
                            <div class="image-preview">
                                <img class="preview card-img-top" :src="p.imagen">
                                <div class="card-img-overlay">
                                    <h5 class="card-title" >
                                        {{p.orden}}
                                    </h5>
                                </div>
                            </div>

                        </div>
                    </div>
                    
                    
                    
                </div>
                <hr>
                <button class="btn btn-success btn-lg" id="createBtn">Crear</button>
            <!-- </form> -->
        </div>
    </div>
</template>

<script>
export default {
    data () {
        return {
            imageData: "",
            photos: [
                {
                    orden: 1,
                    ordered: false,
                },
                {
                    orden: 2,
                    ordered: false,

                },
                {
                    orden: 3,
                    ordered: false,
                },
                {
                    orden: 4,
                    ordered: false,
                },
            ],
            allSet: false,
            clickOrder: 0,
            sorting: false,
        }
    },
    computed: {
        getLugar(i) {
            return this.lugar[i]
        }
    },
    methods: {
        ordenar(){
            this.sorting = true
            for(let i = 0; i < this.photos.length; i++){
                    this.photos[i].orden = 0;
                }
        },
        changeOrder(i){
            if (this.sorting){
                if(!this.photos[i].ordered){
                    if (this.clickOrder < this.photos.length) {
                        this.clickOrder++;
                        this.photos[i].orden = this.clickOrder;
                        this.photos[i].ordered = true;
                    }else{
                        this.sorting = false;
                        this.clickOrder = 0;
                    }


                }
            }
        },
        showData(event){
            // Reference to the DOM input element
            var input = event.target;
            // Ensure that you have a file before attempting to read it
            if (input.files && input.files[0]) {
                
                console.log (input.files.length);
                for (let i=0; i< input.files.length; i++){
                    // create a new FileReader to read this image and convert to base64 format
                    var reader = new FileReader();
                    // Define a callback function to run, when FileReader finishes its job
                    reader.onload = (e) => {
                        // Note: arrow function used here, so that "this.imageData" refers to the imageData of Vue component
                        // Read image as base64 and set to imageData
                        this.photos[i].imagen = (e.target.result);
                    }
                    reader.readAsDataURL(input.files[i]);
                }
                
                // Start the reader job - read file as a data url (base64 format)
            }
        }
    }
}
</script>

<style>
.card {
    height: 150px;
}
.preview {
    height: 100px;
    width: 100px;
}
</style>
